(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,function(e,t,n){e.exports=n(12)},,,,,,function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n.r(t);var o=n(0),a=n.n(o),r=n(3),c=n.n(r),i=(n(10),n(1));var s=function(){var e=function(e,t){var n=Object(o.useState)(function(){try{var n=window.localStorage.getItem(e);return n?JSON.parse(n):t}catch(o){return console.log(o),t}}),a=Object(i.a)(n,2),r=a[0],c=a[1];return[r,function(t){try{var n=t instanceof Function?t(r):t;c(n),window.localStorage.setItem(e,JSON.stringify(n))}catch(o){console.log(o)}}]}("dark-mode-enabled"),t=Object(i.a)(e,2),n=t[0],a=t[1],r=function(e,t,n){var a=Object(o.useState)(n),r=Object(i.a)(a,2),c=r[0],s=r[1],l=e.map(function(e){return window.matchMedia(e)}),u=function(){var e=l.findIndex(function(e){return e.matches});return"undefined"!==typeof t[e]?t[e]:n};return Object(o.useEffect)(function(){s(u);var e=function(){return s(u)};return l.forEach(function(t){return t.addListener(e)}),function(){return l.forEach(function(t){return t.removeListener(e)})}},[]),c}(["(prefers-color-scheme: dark)"],[!0],!1),c="undefined"!==typeof n?n:r;return Object(o.useEffect)(function(){var e=window.document.body;c?e.classList.add("dark-mode"):e.classList.remove("dark-mode")},[c]),[c,a]},l=function(e){var t=e.darkMode,n=e.setDarkMode;return a.a.createElement("div",{className:"dark-mode-toggle"},a.a.createElement("button",{type:"button",onClick:function(){return n(!1)}},"\u2600"),a.a.createElement("span",{className:"toggle-control"},a.a.createElement("input",{className:"dmcheck",id:"dmcheck",type:"checkbox",checked:t,onChange:function(){return n(!t)}}),a.a.createElement("label",{htmlFor:"dmcheck"})),a.a.createElement("button",{type:"button",onClick:function(){return n(!0)}},"\u263e"))},u=function(e){e.checked,e.onChange;return a.a.createElement("div",{className:"content"},a.a.createElement("h1",null,"What Are Hooks, Exactly?"),a.a.createElement("p",null,"To understand Hooks, we need to take a step back and think about code reuse."),a.a.createElement("p",null,"Today, there are a lot of ways to reuse logic in React apps. We can write simple functions and call them to calculate something. We can also write components (which themselves could be functions or classes). Components are more powerful, but they have to render some UI. This makes them inconvenient for sharing non-visual logic. This is how we end up with complex patterns like render props and higher-order components. Wouldn\u2019t React be simpler if there was just one common way to reuse code instead of so many?"),a.a.createElement("p",null,"Functions seem to be a perfect mechanism for code reuse. Moving logic between functions takes the least amount of effort. However, functions can\u2019t have local React state inside them. You can\u2019t extract behavior like \u201cwatch window size and update the state\u201d or \u201canimate a value over time\u201d from a class component without restructuring your code or introducing an abstraction like Observables. Both approaches hurt the simplicity that we like about React."),a.a.createElement("p",null,"Hooks solve exactly that problem. Hooks let you use React features (like state) from a function\u200a\u2014\u200aby doing a single function call. React provides a few built-in Hooks exposing the \u201cbuilding blocks\u201d of React: state, lifecycle, and context."),a.a.createElement("p",null,"Since Hooks are regular JavaScript functions, you can combine built-in Hooks provided by React into your own \u201ccustom Hooks\u201d. This lets you turn complex problems into one-liners and share them across your application or with the React community."))};n(11);var d=function(){var e=s(),t=Object(i.a)(e,2),n=t[0],o=t[1];return a.a.createElement("div",null,a.a.createElement("div",{className:"navbar"},a.a.createElement(l,{darkMode:n,setDarkMode:o})),a.a.createElement(u,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(a.a.createElement(d,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[4,1,2]]]);
//# sourceMappingURL=main.b34e1853.chunk.js.map